{"version":3,"sources":["actions/index.js","containers/BoardSize.js","components/Tile.js","containers/Tile.js","components/Board.js","reducers/board.js","containers/Board.js","components/Score.js","containers/Score.js","components/History.js","containers/History.js","components/App.js","reducers/index.js","index.js"],"names":["MoveDirections","MOVE_LEFT","MOVE_RIGHT","MOVE_UP","MOVE_DOWN","connect","state","size","board","present","input","dispatch","onSubmit","e","preventDefault","value","parseInt","trim","type","changeBoardSize","ref","node","placeholder","Tile","exponent","bgColor","textColor","className","style","backgroundColor","color","colors","0","1","2","3","4","5","6","7","8","9","10","11","ownProps","Math","min","Board","handleKeyPress","bind","event","direction","keyCode","this","props","allowedMoves","includes","onMove","document","addEventListener","removeEventListener","width","boardSize","map","row","i","col","j","key","React","Component","NULL_TILE","defaultBoard","initBoard","handleMove","currentState","action","data","r","slice","applyMove","join","indexOf","equalStates","generateTile","shiftBoard","reverse","transpose","state1","state2","JSON","stringify","Array","x","fill","randomInt","max","floor","random","_","c","k","shiftRow","writeCol","isValidMove","getAllowedMoves","push","gameMove","Score","score","calcScore","sum","forEach","History","canUndo","canRedo","onUndo","onRedo","onClick","disabled","past","length","future","UndoActionCreators","undo","redo","App","combineReducers","undoable","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","render","getElementById"],"mappings":"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","file":"static/js/main.efe2d2e9.chunk.js","sourcesContent":["export const changeBoardSize = size => ({\n  type: 'CHANGE_BOARD_SIZE',\n  size\n});\n\nexport const gameMove = direction => ({\n  type: 'GAME_MOVE',\n  direction\n});\n\nexport const MoveDirections = {\n  MOVE_LEFT: 'MOVE_LEFT',\n  MOVE_RIGHT: 'MOVE_RIGHT',\n  MOVE_UP: 'MOVE_UP',\n  MOVE_DOWN: 'MOVE_DOWN'\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeBoardSize } from '../actions';\n\nconst BoardSize = ({ size, dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <h2>Change board size:</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          const value = parseInt(input.value.trim());\n          if (value < 2 || value > 20) {\n            input.value = size;\n            return;\n          }\n          dispatch(changeBoardSize(value));\n        }}\n      >\n        <input ref={node => (input = node)} placeholder=\"New Size (2 - 20)\" />\n        <button type=\"submit\">Change</button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  size: state.board.present.size\n});\n\nexport default connect(mapStateToProps)(BoardSize);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tile = ({ exponent, bgColor, textColor }) => (\n  <div\n    className=\"tile\"\n    style={{\n      backgroundColor: '#' + bgColor,\n      color: '#' + textColor\n    }}\n  >\n    {exponent ? 2 ** exponent : ''}\n  </div>\n);\n\nTile.propTypes = {\n  exponent: PropTypes.number.isRequired\n};\n\nexport default Tile;\n","import { connect } from 'react-redux';\nimport Tile from '../components/Tile';\n\nconst colors = {\n  0: 'cdc1b4',\n  1: 'eee3d6',\n  2: 'ede0c8',\n  3: 'f2b179',\n  4: 'f59563',\n  5: 'f67e5f',\n  6: 'f65e3b',\n  7: 'f1d96b',\n  8: 'f2cf4d',\n  9: 'e5c12b',\n  10: 'dfba12',\n  11: 'edc501'\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  bgColor: colors[Math.min(ownProps.exponent, 11)],\n  textColor: ownProps.exponent > 2 ? 'f9f6f2' : '776e65'\n});\n\nexport default connect(mapStateToProps)(Tile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tile from '../containers/Tile';\nimport { MoveDirections } from '../actions';\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleKeyPress(event) {\n    let direction = null;\n\n    switch (event.keyCode) {\n      case 37:\n        direction = MoveDirections.MOVE_LEFT;\n        break;\n      case 38:\n        direction = MoveDirections.MOVE_UP;\n        break;\n      case 39:\n        direction = MoveDirections.MOVE_RIGHT;\n        break;\n      case 40:\n        direction = MoveDirections.MOVE_DOWN;\n        break;\n      default:\n        return;\n    }\n\n    if (this.props.allowedMoves.includes(direction)) {\n      this.props.onMove(direction);\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"board\"\n        style={{\n          width: this.props.boardSize * 80 + 'px'\n        }}\n      >\n        {this.props.board.map((row, i) =>\n          row.map((col, j) => <Tile key={i + '-' + j} exponent={col} />)\n        )}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  boardSize: PropTypes.number.isRequired,\n  board: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.number.isRequired).isRequired\n  ).isRequired,\n  allowedMoves: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default Board;\n","const NULL_TILE = 0;\n\nlet defaultBoard = initBoard(4);\n\nconst board = (currentState = defaultBoard, action) => {\n  switch (action.type) {\n    case 'CHANGE_BOARD_SIZE':\n      return initBoard(action.size);\n    case 'GAME_MOVE':\n      return handleMove(currentState, action);\n    default:\n      return currentState;\n  }\n};\n\nfunction handleMove(currentState, action) {\n  let state = {\n    size: currentState.size,\n    data: currentState.data.map(r => r.slice(0))\n  };\n\n  applyMove(state, action.direction);\n\n  if (hasEmptyTile(state) && !equalStates(currentState, state)) {\n    generateTile(state);\n    return state;\n  } else {\n    return currentState;\n  }\n}\n\nfunction applyMove(state, direction) {\n  switch (direction) {\n    case 'MOVE_LEFT':\n      shiftBoard(state);\n      break;\n    case 'MOVE_RIGHT':\n      state.data = state.data.map(r => r.reverse());\n      shiftBoard(state);\n      state.data = state.data.map(r => r.reverse());\n      break;\n    case 'MOVE_UP':\n      state.data = transpose(state.data);\n      shiftBoard(state);\n      state.data = transpose(state.data);\n      break;\n    case 'MOVE_DOWN':\n      state.data = transpose(state.data.reverse());\n      shiftBoard(state);\n      state.data = transpose(state.data).reverse();\n      break;\n    default:\n      return state;\n  }\n\n  return state;\n}\n\nfunction hasEmptyTile(board) {\n  return board.data.join().indexOf(NULL_TILE) !== -1;\n}\n\nfunction equalStates(state1, state2) {\n  return JSON.stringify(state1) === JSON.stringify(state2);\n}\n\nfunction initBoard(size) {\n  let board = [...Array(size)].map(x => Array(size).fill(0));\n\n  let state = {\n    size: size,\n    data: board\n  };\n\n  generateTile(state);\n  return state;\n}\n\nfunction generateTile(board) {\n  while (true) {\n    const row = randomInt(0, board.size - 1);\n    const col = randomInt(0, board.size - 1);\n\n    if (board.data[row][col] === NULL_TILE) {\n      board.data[row][col] = randomInt(0, 2) > 1 ? 2 : 1;\n      return board;\n    }\n  }\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max + 1)) + min;\n}\n\nfunction transpose(board) {\n  return board[0].map(function(_, c) {\n    return board.map(function(r) {\n      return r[c];\n    });\n  });\n}\n\nfunction shiftBoard(board) {\n  for (let i = 0; i < board.size; i++) {\n    for (let j = 0; j < board.size; j++) {\n      if (board.data[i][j] !== NULL_TILE) {\n        for (let k = j + 1; k < board.size; k++) {\n          if (board.data[i][k] !== NULL_TILE) {\n            if (board.data[i][j] === board.data[i][k]) {\n              board.data[i][j] += 1;\n              board.data[i][k] = NULL_TILE;\n            }\n            break;\n          }\n        }\n      }\n    }\n    board.data[i] = shiftRow(board.data[i], board.size);\n  }\n\n  return board;\n}\n\nfunction shiftRow(row, size) {\n  let writeCol = 0;\n  for (let i = 0; i < size; i++) {\n    if (row[i] !== NULL_TILE) {\n      row[writeCol] = row[i];\n      if (writeCol !== i) {\n        row[i] = NULL_TILE;\n      }\n      writeCol++;\n    }\n  }\n\n  return row;\n}\n\nexport function isValidMove(currentState, direction) {\n  let state = {\n    size: currentState.size,\n    data: currentState.data.map(r => r.slice(0))\n  };\n\n  applyMove(state, direction);\n\n  return !equalStates(currentState, state);\n}\n\nexport default board;\n","import { connect } from 'react-redux';\nimport { gameMove, MoveDirections } from '../actions';\nimport Board from '../components/Board';\nimport { isValidMove } from '../reducers/board';\n\nfunction getAllowedMoves(state) {\n  let allowedMoves = [];\n\n  for (const direction in MoveDirections) {\n    if (isValidMove(state.board.present, direction)) {\n      allowedMoves.push(direction);\n    }\n  }\n\n  return allowedMoves;\n}\n\nconst mapStateToProps = state => ({\n  boardSize: state.board.present.size,\n  board: state.board.present.data,\n  allowedMoves: getAllowedMoves(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onMove: direction => dispatch(gameMove(direction))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Score = ({ score }) => <h2>Score: {score}</h2>;\n\nScore.propTypes = {\n  score: PropTypes.number.isRequired\n};\n\nexport default Score;\n","import { connect } from 'react-redux';\nimport Score from '../components/Score';\n\nfunction calcScore(board) {\n  let sum = 0;\n  board.data.forEach(row => {\n    row.forEach(value => {\n      if (value > 0) sum += 2 ** value;\n    });\n  });\n\n  return sum;\n}\n\nconst mapStateToProps = state => ({\n  score: calcScore(state.board.present)\n});\n\nexport default connect(mapStateToProps)(Score);\n","import React from 'react';\n\nconst History = ({ canUndo, canRedo, onUndo, onRedo }) => (\n  <div className=\"history\">\n    <h2>History</h2>\n    <p>\n      <button onClick={onUndo} disabled={!canUndo}>\n        &lt; Undo\n      </button>\n      <button onClick={onRedo} disabled={!canRedo}>\n        Redo &gt;\n      </button>\n    </p>\n  </div>\n);\n\nexport default History;\n","import { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { connect } from 'react-redux';\nimport History from '../components/History';\n\nconst mapStateToProps = state => {\n  return {\n    canUndo: state.board.past.length > 0,\n    canRedo: state.board.future.length > 0\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUndo: () => dispatch(UndoActionCreators.undo()),\n    onRedo: () => dispatch(UndoActionCreators.redo())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(History);\n","import React from 'react';\nimport BoardSize from '../containers/BoardSize';\nimport Board from '../containers/Board';\nimport Score from '../containers/Score';\nimport History from '../containers/History';\n\nconst App = () => (\n  <div>\n    <BoardSize />\n    <Score />\n    <Board />\n    <History />\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport undoable from 'redux-undo';\nimport board from './board';\n\nexport default combineReducers({\n  board: undoable(board)\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}